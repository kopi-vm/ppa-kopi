on:
  workflow_dispatch:

name: Build PPA Repository
jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.aptly/db
            ~/.aptly/pool
          key: ${{ runner.os }}-aptly-cache-${{ hashFiles('**/packages.list') }}
          restore-keys: ${{ runner.os }}-aptly-cache-

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@e89d40939c28e39f97cf32126055eeae86ba74ec
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASSE }}

      - name: Install aptly
        run: |
          echo 'path-exclude /usr/share/man/*' | sudo tee /etc/dpkg/dpkg.cfg.d/01_nodoc
          echo 'path-exclude /usr/share/doc/*' | sudo tee -a /etc/dpkg/dpkg.cfg.d/01_nodoc

          sudo apt-get update
          sudo apt-get install -y aptly

          mkdir -p ~/.aptly
          ln -s ${{ github.workspace }}/docs/ ~/.aptly/public

      - name: Download deb packages
        uses: robinraju/release-downloader@v1
        with:
          repository: 'kopi-vm/kopi'
          fileName: '*.deb'
          latest: true
          out-file-path: 'packages/'

      - name: Update Repositories
        env:
          GPG_KEY_ID: ${{ steps.import_gpg.outputs.fingerprint }}
          GPG_PASSPHRASSE: ${{ secrets.GPG_PASSPHRASSE }}
        run: |
          DISTROS="bullseye bookworm jammy noble"
          ARCHS="amd64,arm64"

          for dist in $DISTROS; do
            REPO_NAME="kopi-ppa-${dist}"

            aptly repo create -distribution="${dist}" -component="main" "$REPO_NAME" || echo "Repo $REPO_NAME already exists"

            aptly repo add "$REPO_NAME" ./packages/*.deb

            if aptly publish list -raw | grep -q "^\.\s${dist}$"; then
              aptly publish update -batch -force-overwrite -gpg-key="$GPG_KEY_ID" -passphrase="$GPG_PASSPHRASSE" "${dist}"
            else
              aptly publish repo -architectures="$ARCHS" -gpg-key="$GPG_KEY_ID" -passphrase="$GPG_PASSPHRASSE" "$REPO_NAME"
            fi
          done

          rm -rf ./packages
      
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Push Changes
        run: |
          git add .

          if ! git diff-index --quiet HEAD; then
            git commit -m "kopi: Update PPA Repository"
            git push origin main
          else
            echo "PPA Repository has already updated."
          fi
